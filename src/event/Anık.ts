// ============================================================================================================================================================== \\

// ModÃ¼ller

import { Client, ActivityOptions, ApplicationCommandOptionData, ActivityType } from 'discord.js'

// ============================================================================================================================================================== \\

// Dosyalar

import { KomutSeÃ§enekleriYÃ¼kle } from '../func/KomutSeÃ§enekleriYÃ¼kle'

import { SÃ¶yleÅŸiBÃ¶lÃ¼mÃ¼GirdiKomutlarÄ± } from '../handler/Komutlar'

import Kanallar from '../config/Kanallar'

// ============================================================================================================================================================== \\

// Ä°hracat

export default async (Ä°stemci: Client) => {
    const doÄŸrulamaKanalÄ± = Ä°stemci.channels.resolve (Kanallar.DoÄŸrulama)
    
    doÄŸrulamaKanalÄ±?.isTextBased () ? await doÄŸrulamaKanalÄ±.messages.fetch ('615903503407120394') : ''

    SÃ¶yleÅŸiBÃ¶lÃ¼mÃ¼GirdiKomutlarÄ±.forEach (Komut => {
        const SeÃ§enekler: Array <ApplicationCommandOptionData> = Komut.SeÃ§enekler ? KomutSeÃ§enekleriYÃ¼kle (Komut.SeÃ§enekler) : []

        Ä°stemci.application?.commands.create ({
            type: 1,
            name: Komut.Ad,
            description: Komut.AÃ§Ä±klama,
            options: SeÃ§enekler
        }).then (yaratÄ±lanKomut => {
            console.log (`â–« ${yaratÄ±lanKomut.name} adlÄ± bir komut sisteme eklendi! \nVar olan komut sayÄ±sÄ±: ${Ä°stemci.application?.commands.cache.size}`)
        })
    })

    console.info ('ğŸŒŸ FBI Gizli Servisi TS uygulamasÄ± anlÄ±k olarak etkin!')
    
    const Etkinlikler: Array <ActivityOptions> = [
        {
            type: ActivityType.Playing,
            name: 'Habbo'
        },
        {
            type: ActivityType.Watching,
            name: 'Olup Biteni'
        },
        {
            type: ActivityType.Listening,
            name: 'AygÄ±tlarÄ±nÄ±zÄ±'
        }
    ]

    setInterval (() => {
        const Etkinlik: ActivityOptions = Etkinlikler [Math.floor (Math.random () * Etkinlikler.length)]

        Ä°stemci.user?.setPresence ({
            activities: [Etkinlik]
        })
    }, 15000)
}

// ============================================================================================================================================================== \\